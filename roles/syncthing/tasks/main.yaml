- name: "Ensure /home/{{ ansible_user_id | default(ansible_facts.user_id, true) }}/.local/share/systemd/user/ directory exists"
  ansible.builtin.file:
    path: "/home/{{ ansible_user_id | default(ansible_facts.user_id) }}/.config/systemd/user"
    state: directory
    owner: "{{ ansible_user_uid | default(ansible_facts.user_uid, true) }}"
    group: "{{ ansible_user_gid | default(ansible_facts.user_gid, true) }}"
    mode: '0750'
    recurse: true

- name: "Copy systemd service file provided by syncthing package to /home/{{ ansible_user | default(ansible_facts.user_id, true) }}/.local/share/systemd/user/syncthing.service"
  ansible.builtin.copy:
    src: /usr/lib/systemd/user/syncthing.service
    dest: "/home/{{ ansible_user_id | default(ansible_facts.user_id) }}/.config/systemd/user"
    remote_src: yes
    owner: "{{ ansible_user_uid | default(ansible_facts.user_uid, true) }}"
    group: "{{ ansible_user_gid | default(ansible_facts.user_gid, true) }}"
    mode: '0640'

# the watches consume RAM for each inode being watched, keep that in mind
# https://docs.syncthing.net/users/faq.html#inotify-limits
- name: Raise maximum number of inotify watches
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/10-syncthing.conf
    regexp: '^fs.inotify.max_user_watches='
    line: fs.inotify.max_user_watches=600000
    create: true
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Make sure the syncthing user service unit is running
  ansible.builtin.systemd_service:
    scope: user
    name: syncthing
    state: started
    enabled: true
    daemon_reload: true

- name: Create /datengruft directory if it does not exist
  ansible.builtin.file:
    path: /datengruft
    state: directory
    owner: leon
    group: leon
    mode: "0755"
  become: true

- name: Create symbolic links in /wunderhort for syncthing managed directories in /datengruft
  ansible.builtin.file:
    src: "/datengruft/{{ item }}"
    dest: "/wunderhort/{{ item }}"
    owner: "{{ ansible_user_uid | default(ansible_facts.user_uid, true) }}"
    group: "{{ ansible_user_gid | default(ansible_facts.user_gid, true) }}"
    state: link
    force: true
    # this module attempts to modify permissions on src by default, when creating a symlink
    follow: false
  loop: "{{ datengruft }}"
